class Solution {
public:

    void dfs(vector<string>& ans, string src, map<string,multiset<string>>& adj){
        
        while(adj[src].size()){
            string temp = *adj[src].begin();
            adj[src].erase(adj[src].begin());
            dfs(ans,temp,adj);
        }
        ans.push_back(src);        
        
    }
        
    vector<string> findItinerary(vector<vector<string>>& tickets) {
        vector<string> ans;
        map<string,multiset<string>> adj;
        for(int i=0; i<tickets.size();i++){
            adj[tickets[i][0]].insert(tickets[i][1]);
        }
        dfs(ans,"JFK",adj);
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
